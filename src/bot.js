// * Salim Bot: Bot that is running in my group's server 24/7
// * Great Example for S-Bot Framework

// * Turn on syntax/type check
// @ts-check

const setupStart = performance.now();

// * Some Nice Welcome Text
import chalk from "chalk";
console.log(
    chalk.cyan("Starting Salim Bot ") +
        chalk.magenta(process.env.npm_package_version) +
        "‚ú®‚ú®"
);

// * Import used Stuff
import {
    AboutFramework,
    ActivityLoader,
    Console,
    ComputedLoader,
    DataLoader,
    MultiLoader,
    OnlineLoader,
    SBotClient,
    SongLoader,
    Response,
    sLogger,
    SongAppearance,
} from "s-bot-framework";

// * Create Client, token is automatically grabbed from process.env.DISCORD_TOKEN
// * Make sure you added your token in .env
const client = new SBotClient();

// * Load Stuff from Files & Online Source
const keywords = new DataLoader("data/keywords.json", "‡∏ä‡∏±‡∏á‡∏ä‡∏≤‡∏ï‡∏¥");
const localquotes = new DataLoader("data/morequotes.json", "‡∏ß‡∏≤‡∏ó‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏•‡∏¥‡πà‡∏°");
const awesome_salim_quotes = new OnlineLoader(
    "https://watasalim.vercel.app/api/quotes",
    "quotes",
    (t) => t.body
);
const facebook = new DataLoader(
    "data/facebook.json",
    "‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô",
    (t) => `‡∏î‡∏¥‡∏â‡∏±‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° ${t.name} ‡∏ô‡∏∞ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏™‡∏ß‡πà‡∏≤‡∏á ${t.url}`
);

// * Combined multiple data into One Category
const combinedQuotes = new MultiLoader([
    {
        loader: localquotes,
        label: "Local Quotes",
    },
    {
        loader: awesome_salim_quotes,
        label: "Awesome Salim Quotes",
    },
]);

// * Response on Keywords ex. Answering questions

// * Introducing itself
client.useResponse(
    new Response({
        trigger: { mention: true, keywords: ["‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß"] },
        response: {
            loader: new ComputedLoader(
                () =>
                    `‡∏™ ‡∏ß‡∏± ‡∏™ ‡∏î‡∏µ ‡∏Ñ ‡∏£‡∏± ‡∏ö ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ä‡∏°‡∏£‡∏°‡∏Ñ‡∏ô‡∏ä‡∏≠‡∏ö‡∏Å‡∏∞‡∏™‡∏±‡∏™‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô ‡∏Å‡∏£‡∏∞‡∏ú‡∏°‡∏™‡∏•‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô ${
                        process.env.npm_package_version
                    }\n‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô ${AboutFramework()}`
            ),
            reply: true,
            audio: true,
        },
    })
);

// * Facebook Recommendation Feature
client.useResponse(
    new Response({
        trigger: { mention: true, keywords: ["fb", "‡πÄ‡∏ü‡∏™", "facebook"] },
        response: {
            loader: facebook,
            reply: true,
            audio: true,
        },
    })
);

// * Create Response Variable (instead of putting directly to the function)
// * It is to keep later for getting data of triggered words
const ‡∏ä‡∏±‡∏á‡∏ä‡∏≤‡∏ï‡∏¥ = new Response({
    trigger: { keywords },
    response: {
        loader: combinedQuotes,
        react: "üò°",
        audio: true,
    },
});
client.useResponse(‡∏ä‡∏±‡∏á‡∏ä‡∏≤‡∏ï‡∏¥);

// * ComputedLoader allows simple dynamic string
client.useResponse(
    new Response({
        trigger: { mention: true, keywords: ["‡∏ú‡∏¥‡∏î"] },
        response: {
            loader: new ComputedLoader(
                () =>
                    `‡∏û‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏ú‡∏¥‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏π‡∏î‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ ${‡∏ä‡∏±‡∏á‡∏ä‡∏≤‡∏ï‡∏¥.triggered} ‡∏ñ‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏Å‡∏Ñ‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏¥‡πà‡∏á`
            ),
            reply: true,
            audio: true,
        },
    })
);

// * Bot Activity
client.useComputedActivity({
    type: "PLAYING",
    name: `Salim Bot ${process.env.npm_package_version}`,
});
const activityLoader = new ActivityLoader("data/activity.json", "activities");
client.useActivities(activityLoader);

// * Use Voice in Corgi Swift Jutsu Mode
client.useVoice({
    jutsu: "CorgiSwift",
    fallback: {
        no_channel: "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏â‡∏±‡∏ô‡πÑ‡∏õ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏µ‡∏ü‡∏±‡∏á‡∏´‡∏£‡∏≠",
        stage_channel: "‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏ö‡πÄ‡∏Æ‡∏≤‡∏™‡πå ‡∏ô‡∏±‡πà‡∏ô‡∏°‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ä‡∏±‡∏á‡∏ä‡∏≤‡∏ï‡∏¥",
        not_joinable: "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏ó‡∏≥‡∏ï‡∏±‡∏ß‡∏™‡∏≤‡∏°‡∏Å‡∏µ‡∏ö ‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏≤‡πÅ‡∏ï‡πà‡πÅ‡∏ö‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°",
        internal:
            "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡∏µ‡∏°‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏¥‡∏ì",
        reply: true,
    },
});
// ! NOTE: For SOD (Legacy) Mode, it is removed

// * DJSalima ÂèÇ‰∏ä!!!
const easterEggSong = new SongLoader("data/songs.json", "easter_egg");
const ‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥Song = new SongLoader("data/songs.json", "‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥");
client.useDJ(
    [
        // * Bot Songs
        {
            loader: easterEggSong,
            category: "Easter Egg",
            appearance: SongAppearance.RANDOM_ONLY,
            onPlay: "Easter Egg ‡∏ô‡∏∞‡∏à‡πä‡∏∞!! ü§©ü§© ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö {song_name}",
        },
        {
            loader: ‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥Song,
            category: "‡πÄ‡∏û‡∏•‡∏á‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥",
            appearance: SongAppearance.EVERYWHERE,
            onPlay: "‡∏Ç‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏î‡πâ‡∏ß‡∏¢ {song_name} üíõüíõ",
        },
    ],
    {
        // * Bot Commands
        play: {
            prefixes: ["!djsalima"],
            reply: true,
            onQueued: {
                tts: "‡πÅ‡∏ï‡πà‡∏£‡∏≠‡πÅ‡∏õ‡πä‡∏õ‡∏ô‡∏∞‡∏à‡πä‡∏∞ ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡πà‡∏≤‡∏û‡∏ß‡∏Å‡∏ä‡∏±‡∏á‡∏ä‡∏≤‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà ‡∏î‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ",
                song: "‡πÅ‡∏ï‡πà‡∏£‡∏≠‡πÅ‡∏õ‡πä‡∏õ‡∏ô‡∏∞‡∏à‡πä‡∏∞ ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏≠‡∏¢‡∏π‡πà ‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ",
            },
            search_fail:
                "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÅ‡∏ï‡πà‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏•‡∏á‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ü‡πâ‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏•‡∏á‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡∏Ñ‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏û‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏ü‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ",
            search_multiple_result:
                "‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ",
            now_playing: {
                send_embed: true,
                color: "YELLOW",
                title: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô",
                requested_by: "‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô",
                duration: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏û‡∏•‡∏á",
                link: "‡∏•‡∏¥‡∏á‡∏Å‡πå",
                click_here: "‡∏Ñ‡∏•‡∏¥‡πä‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏ô‡∏∞‡∏à‡πä‡∏∞",
                footer: "‡∏ô‡πâ‡∏≠‡∏ô DJSalima ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏®‡∏≤‡∏™‡∏ô‡πå ‡∏Å‡∏©‡∏±‡∏ï‡∏£‡∏¥‡∏¢‡πå ‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏±‡∏ß‡πÉ‡∏à üíõüíõüíõ",
            },
        },
        skip: {
            prefixes: ["!skip"],
            already_empty: "‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏â‡∏±‡∏ô‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£ ‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏û‡∏π‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏•‡∏¢!!!",
            react: "‚è©",
        },
        clear: {
            prefixes: ["!clear"],
            already_empty: "‡∏°‡∏±‡∏ô‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏£‡∏≠ ‡∏´‡∏±‡∏î‡∏Ñ‡∏¥‡∏î‡∏ö‡πâ‡∏≤‡∏á‡∏™‡∏¥ ‡∏û‡∏ß‡∏Å‡∏™‡∏≤‡∏°‡∏Å‡∏µ‡∏ö!!",
            react: "‚úÖ",
        },
        overrides: {
            direct_youtube: {
                admin_only: true,
                prefixes: ["-yt", "--youtube"],
                reply: true,
                message: "‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡πà‡∏∞",
            },
        },
    }
);

// * Console, used to logout properly
const ctrlConsole = new Console(client);

// * Add Loaders to Console to be able to reload while bot is running
ctrlConsole.addLoader(
    keywords,
    localquotes,
    awesome_salim_quotes,
    facebook,
    activityLoader,
    easterEggSong,
    ‡∏£‡∏±‡∏Å‡∏ä‡∏≤‡∏ï‡∏¥Song
);
// * And Add it to Client, as Client is main Class running this Bot!
client.useConsole(ctrlConsole);

// * Done! That's it required for this bot!
sLogger.log(
    `‚ú®‚ú® Async Setup Done in ${(performance.now() - setupStart).toFixed(
        3
    )} ms`,
    "SUCCESS"
);
